package day19;

public class Rewind11 {

	public static void main(String[] args) {
		/* 제네릭 클래스 : 클래스의 멤버변수/메소드의 타입이 객체를 선언할 때 결정되는 클래스 
		 *  - <>로 클래스명 필요(생략하면 <Object>를 한 것과 같음) */
		
		/* 컬렉션 프레임워크 : 자료들을 효율적으로 관리하기 위한 인터페이스 
		 *  종류 : List, Set, Map
		 * 	List와 Set은 한 종류의 데이터 관리하고 Map은 두 종류의 데이터 관리
		 * 	List : 순서 보장, 중복 가능
		 * 	Set : 중복 불가능, 순서 보장 안함
		 * 	Map : key 와 value 로 이루어짐.
		 * 		key : 중복 불가(ID)
		 * 		value : 중복 가능(PW) */
		
		/* List 특징 
		 * 	- 순서보장, 중복가능
		 *  - 인터페이스
		 *  - 멤버메소드
		 *  - 향상된 for문 사용 가능
		 *  - Iterator를 사용하여 값들을 가져올 수 있다.
		 * List 종류  
		 * 	- ArrayList : List의 구현클래스
		 *  	- 특징 : 배열로 된 리스트
		 *  	- 장점 : 탐색이 빠름
		 *  	- 단점 : 중간 삽입/삭제가 느림
		 * 	- LinkedList : List의 구현클래스
		 * 		- 특징 : 연결되어있는 리스트
		 * 		- 장점 : 중간 삽입/삭제가 빠름 
		 * 		- 단점 : 탐색이 느림 */		
		
		/* Set 특징 
		 * 	- 중복 불가능, 순서 보장 안함
		 * 	- 인터페이스
		 *  - 멤법 메소드
		 *  - Iterator를 사용하여 반복문을 사용해야 값들을 가져올 수 있다.(List에 있는 get()메소드가 없기 때문에 Iterator를 이용하지 않고는 값을 확인할 수 없다)
		 * Set 종류
		 * 	- HashSet : Hash코드를 이용하여 먼저 확인 후 equals()를 이용하여 확인	*/
		
		/* Map 특징 
		 *  - 두 종류의 데이터를 저장함(key와 value로 이루어짐)
		 * 	- key는 중복 불가, value는 중복 가능
		 *  - 순서 보장 안함
		 *  - 이미 있는 key 값에 중복으로 데이터를 넣으면 최신 데이터로 덮어씀
		 *  - 값들을 확인하기 위해 set으로 변환시켜야 함
		 *  	-> key값들을 Set으로 만들어서 확인 
		 *  	-> Entry라는 클래스를 사용하여 set으로 만들어서 확인 */
	}

}
