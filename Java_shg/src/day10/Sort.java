package day10;

public class Sort {

	public static void main(String[] args) {
		/* 배열 정렬 : 버블 정렬(정렬 효율이 좋진 않음, 개념 정립에는 좋음)
		 *  - 옆에 요소와 비교하여 정렬하는 방법
		 * 버블 정렬 예시
		 *  예시 숫자 : 5 4 6 9 8 7 10
		 *  1. 0번지와 1번지 비교
		 *  2. 작은숫자를 앞으로 큰 숫자를 뒤로 -> 4, 5, 6, 9, 8, 7, 10 
		 *  3. 1번지와 2번지 비교 -> 4, 5, 6, 9, 8, 7, 10
		 *  4. ... -> 4, 5, 6, 8, 7, 9, 10
		 *  5. 버블 정렬은 큰 수가 가장 오른 쪽에 배치
		 *  6. 이걸 한번 더 실행하면 -> 4, 5, 6, 7, 8, 9, 10 ...-> 결국엔 숫자가 작은수에서 큰 수로 정렬됨
		 *    -> 눈으로 숫자가 정렬이 되었다해도 한 사이클 돌렸을때 오른쪽에 있는 가장 큰 수(10)만 확정되었으므로 첫번째 배열의 숫자까지 계속 돌려서(배열 숫자의 갯수-1번) 해야 숫자들이 확정됨
		 *    
		 *    5, 4, 6, 9, 8, 7, 10 [0,1]
		 *    4, 5, 6, 9, 8, 7, 10 [1,2]
		 *    4, 5, 6, 9, 8, 7, 10 [2,3]
		 *    4, 5, 6, 9, 8, 7, 10 [3,4]
		 *    4, 5, 6, 8, 9, 7, 10 [4,5]
		 *    4, 5, 6, 8, 7, 9, 10 [5,6]
		 *    4, 5, 6, 8, 7, 9, 10 => 10 확정
		 *    4, 5, 6, 8, 7, 9, 10 [0,1]
		 *    4, 5, 6, 8, 7, 9, 10 [1,2]
		 *    4, 5, 6, 8, 7, 9, 10 [2,3]
		 *    4, 5, 6, 8, 7, 9, 10 [3,4]
		 *    4, 5, 6, 7, 8, 9, 10 [4,5]
		 *    4, 5, 6, 7, 8, 9, 10 => 9 확정 
		 *   작은 반복문의 횟수 
		 *    - i=0 => i=1 => i=2 => i=3 => i=4 => i=5
		 *    -  6 =>   5 =>   4 =>   3 =>   2 =>   1   
		 *    - 6-i(i가 0 일때 값 6) < arr.length - 1
		 *  */
		
		int [] arr = new int [] {5, 4, 6, 9, 8, 7, 10};
		printArray(arr);
		System.out.println();
		for(int i =1; i < arr.length-1; i+=1) {
			for(int k=0; k < arr.length-1-i; k+=1) { // 0번지부터 시작하기때문에 for문 안에 조건식 범위에서 -1를 해줘야함
				if(arr[k]>arr[k+1]) {
					int imp = arr[k];
					arr[k] = arr[k+1];
					arr[k+1] = imp;
				}
				printArray(arr);
				System.out.println();
			}			
		}
		printArray(arr);
	}
	public static void printArray(int [] arr) {
		for(int i = 0; i < arr.length; i+=1) {
			System.out.print(arr[i]+" ");
		}
	}
}
